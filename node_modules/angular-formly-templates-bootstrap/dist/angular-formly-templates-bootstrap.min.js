// angular-formly-templates-bootstrap version 4.3.1 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular"),require("api-check"),require("angular-formly")):"function"==typeof define&&define.amd?define(["angular","api-check","angular-formly"],t):"object"==typeof exports?exports.ngFormlyTemplatesBootstrap=t(require("angular"),require("api-check"),require("angular-formly")):e.ngFormlyTemplatesBootstrap=t(e.angular,e.apiCheck,e.ngFormly)}(this,function(e,t,o){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){"use strict";e.exports=o(2)},function(e,t,o){"use strict";var n=o(20);n.version||(n=window.angular),e.exports=n},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n="formlyBootstrap",r=o(1),a=r.module(n,[o(22)]);a.constant("formlyBootstrapApiCheck",o(21)({output:{prefix:"angular-formly-bootstrap"}})),a.constant("formlyBootstrapVersion","4.3.1"),o(13)(a),o(7)(a),o(5)(a),t["default"]=n,e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var n=o(14),r=t.shape({"class":t.string.optional,text:t.string.optional,onClick:t.func.optional}).strict.optional,a=t.shape({templateOptions:t.shape({addonLeft:r,addonRight:r})});e.templateManipulators.preWrapper.push(function(e,o){return o.templateOptions.addonLeft||o.templateOptions.addonRight?(t.warn([a],[o]),n.replace("<formly-transclude></formly-transclude>",e)):e})}e.run(t),t.$inject=["formlyConfig","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e){e.templateManipulators.preWrapper.push(function(e,t,o){if(angular.isDefined(t.templateOptions.description)){var n=document.createElement("div");n.appendChild(angular.element(e)[0]),n.appendChild(angular.element('<p id="'+o.id+'_description"class="help-block"ng-if="to.description">{{to.description}}</p>')[0]);var r=angular.element(n.querySelectorAll("[ng-model]"));return r&&r.attr("aria-describedby",o.id+"_description"),n.innerHTML}return e})}e.run(t),t.$inject=["formlyConfig"]},e.exports=t["default"]},function(e,t,o){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var r=o(3),a=n(r),i=o(4),l=n(i);t["default"]=function(e){a["default"](e),l["default"](e)},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var n=t;e.setType({name:"checkbox",template:o(15),wrapper:["bootstrapHasError"],apiCheck:{templateOptions:n.shape({label:n.string})},apiCheckInstance:n})}e.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){o(6)(e),o(9)(e),o(8)(e),o(10)(e),o(11)(e),o(12)(e)},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e){e.setType({name:"input",template:'<input class="form-control" ng-model="model[options.key]">',wrapper:["bootstrapLabel","bootstrapHasError"]})}e.config(t),t.$inject=["formlyConfigProvider"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var n=t;e.setType({name:"multiCheckbox",template:o(16),wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{noFormControl:!1},apiCheck:{templateOptions:n.shape({options:n.arrayOf(n.object),labelProp:n.string.optional,valueProp:n.string.optional})},apiCheckInstance:n,controller:["$scope",function(e){function t(){e.model[n.key]=[],angular.forEach(e.multiCheckbox.checked,function(t,r){t&&e.model[n.key].push(o.options[r][o.valueProp||"value"])})}var o=e.to,n=e.options;e.multiCheckbox={checked:[],change:t};var r=e.model[n.key];angular.isArray(r)&&!function(){var t=o.valueProp||"value";angular.forEach(o.options,function(o,n){e.multiCheckbox.checked[n]=-1!==r.indexOf(o[t])})}()}]})}e.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var n=t;e.setType({name:"radio",template:o(17),wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{noFormControl:!1},apiCheck:{templateOptions:n.shape({options:n.arrayOf(n.object),labelProp:n.string.optional,valueProp:n.string.optional})},apiCheckInstance:n})}e.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";function n(e,t,o){return Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0})}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var r=t;e.setType({name:"select",template:o,wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:function(e){var t=e.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options";return{ngModelAttrs:n({},t,{value:"ng-options"})}},apiCheck:{templateOptions:r.shape({options:r.arrayOf(r.object),labelProp:r.string.optional,valueProp:r.string.optional,groupProp:r.string.optional})},apiCheckInstance:r})}e.config(t);var o='<select class="form-control" ng-model="model[options.key]"></select>';t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var o=t;e.setType({name:"textarea",template:'<textarea class="form-control" ng-model="model[options.key]"></textarea>',wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}},apiCheck:{templateOptions:o.shape({rows:o.number.optional,cols:o.number.optional})},apiCheckInstance:o})}e.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){function t(e,t){var n=t;e.setWrapper([{name:"bootstrapLabel",template:o(19),apiCheck:{templateOptions:n.shape({label:n.string,required:n.bool.optional})},apiCheckInstance:n},{name:"bootstrapHasError",template:o(18)}])}e.config(t),t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]},e.exports=t["default"]},function(e,t,o){e.exports='<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}">\n    <div class="input-group-addon"\n         ng-if="to.addonLeft"\n         ng-style="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}"\n         ng-click="to.addonLeft.onClick(options, this)">\n        <i class="{{to.addonLeft.class}}" ng-if="to.addonLeft.class"></i>\n        <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span>\n    </div>\n    <formly-transclude></formly-transclude>\n    <div class="input-group-addon"\n         ng-if="to.addonRight"\n         ng-style="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}"\n         ng-click="to.addonRight.onClick(options, this)">\n        <i class="{{to.addonRight.class}}" ng-if="to.addonRight.class"></i>\n        <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span>\n    </div>\n</div>\n'},function(e,t,o){e.exports='<div class="checkbox">\n	<label>\n		<input type="checkbox"\n           class="formly-field-checkbox"\n		       ng-model="model[options.key]">\n		{{to.label}}\n		{{to.required ? \'*\' : \'\'}}\n	</label>\n</div>\n'},function(e,t,o){e.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="checkbox">\n    <label>\n      <input type="checkbox"\n             id="{{id + \'_\'+ $index}}"\n             ng-model="multiCheckbox.checked[$index]"\n             ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(e,t,o){e.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="radio">\n    <label>\n      <input type="radio"\n             id="{{id + \'_\'+ $index}}"\n             tabindex="0"\n             ng-value="option[to.valueProp || \'value\']"\n             ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n    </label>\n  </div>\n</div>\n'},function(e,t,o){e.exports='<div class="form-group" ng-class="{\'has-error\': showError}">\n  <formly-transclude></formly-transclude>\n</div>\n'},function(e,t,o){e.exports="<div>\n  <label for=\"{{id}}\" class=\"control-label\">\n    {{to.label}}\n    {{to.required ? '*' : ''}}\n  </label>\n  <formly-transclude></formly-transclude>\n</div>\n"},function(t,o,n){t.exports=e},function(e,o,n){e.exports=t},function(e,t,n){e.exports=o}])});
//# sourceMappingURL=angular-formly-templates-bootstrap.min.js.map